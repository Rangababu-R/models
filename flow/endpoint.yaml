openapi: 3.1.0

info:
  title: Flow endpoint models
  version: 1.0.1


components:
  schemas:
    Flow.Endpoint:
      description: >-
        A container for different types of endpoints.
        The endpoint choice dictates the type of flow.
      type: object
      required: [choice]
      properties:
        choice:
          description: >-
            The type of endpoint that the flow will originate from.
          type: string
          enum: [port, device]
        port:
          $ref: '#/components/schemas/Flow.PortEndpoint'
        device:
          $ref: '#/components/schemas/Flow.DeviceEndpoint'

    Flow.PortEndpoint:
      description: >-
        An endpoint that contains a transmit port and 0..n receive ports.
      type: object
      required: [tx_port]
      properties:
        tx_port:
          description: >-
            The unique name of a port that is the transmit port.
          type: string
        rx_ports:
          description: >-
            The unique names of ports that are the intended receive ports.
          type: array
          items:
            type: string
        tx_patterns:
          description: >-
            A list of custom patterns that will be applied to the transmit port.
          type: array
          items:
            $ref: './port-pattern.yaml#/components/schemas/Flow.PortPattern'

    Flow.DeviceEndpoint:
      description: >-
        An endpoint that contains 1..n emulated transmit devices and 1..n 
        emulated receive devices.
      type: object
      required: [tx_devices, rx_devices]
      properties:
        tx_devices:
          description: >-
            The unique names of emulated devices that will be transmitting.
            The devices names can be 1..n of 
            DeviceGroup, Device, Ethernet, Vlan, Ipv4 etc
          type: array
          items:
            type: string
        rx_devices:
          description: >-
            The unique names of emulated devices that will be receiving.
            The devices names can be 1..n of 
            DeviceGroup, Device, Ethernet, Vlan, Ipv4 etc
          type: array
          items:
            type: string
        packet_encap:
          description: >-
            The encapsulation determines what packet headers will be 
            auto generated by the traffic generator and will make use of any
            learned information such as mac addresses, gateway addresses etc.
          type: string
          enum: [ethernet, vlan, ipv4, ipv6]
        src_dst_mesh: 
          type: string
          enum: [none, one_to_one, many_to_many, full_mesh]
        route_host_mesh:
          type: string
          enum: [one_to_one, full_mesh]
        bi_directional:
          type: boolean
        allow_self_destined:
          type: boolean
        
