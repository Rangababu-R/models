name: Models CI/CD

# Trigger everytime a push occurs
on:
  push:
  workflow_dispatch:
    paths:
    - '!artifacts/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Build container image
        run: docker build . -t models || exit 1

      - name: Generate artifacts
        id: gen_artifact
        # Mount local dir to a dir inside container where build artifacts are
        # generated so that we don't have to actually get inside the container.
        run: |
          mkdir -p art
          docker run -v $(pwd)/art:/home/otg/models/art/ models /bin/bash -c "./do.sh art" || exit 1

      - name: Upload artifacts
        # upload all files in the artifacts directory
        # the artifact zip is available using the following github API 
        # curl https://api.github.com/repos/open-traffic-generator/models/actions/artifacts
        # the artifact is only available for the amount of time dictated by the 
        # repo settings which is defaulted to 90 days
        uses: actions/upload-artifact@v2
        with:
          path: art

      - name: Commit auto generated content
        id: commit_generated
        run: |
          git config user.name "Github Actions Bot"
          git config user.email "actions@github.com"
          cp $(pwd)/art/openapi.yaml artifacts/openapi.yaml
          cp $(pwd)/art/otg.proto artifacts/otg.proto
          git add --force artifacts/openapi.yaml
          git add --force artifacts/otg.proto
          if git status --porcelain | grep .
            then
              git commit -m "Update auto generated content" 
              git push
            else
              echo "No changed auto generated content"
          fi

      - name: Get version
        id: get_version
        run: |
          echo "::set-output name=version::v$(./do.sh version)"

      - name: Check tag for current version
        uses: mukunku/tag-exists-action@v1.0.0
        id: check_tag
        with:
          tag: ${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release and publish artifacts
        if: steps.check_tag.outputs.exists == 'false'
        uses: ncipollo/release-action@v1
        with:
          name: "Release ${{ steps.get_version.outputs.version }}"
          body: "View openapi.yaml spec at https://redocly.github.io/redoc/?url=https://github.com/open-traffic-generator/models/releases/download/${{ steps.get_version.outputs.version }}/openapi.yaml"
          artifacts: "art/*"
          tag: ${{ steps.get_version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
