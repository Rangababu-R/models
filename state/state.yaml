openapi: 3.1.0

info:
  title: State models
  version: 1.0.0

components:
  schemas:
    State.Config:
      description: >-
        placeholder
      type: object
      required: [state]
      properties:
        state:
          description: >-
            A request to the traffic generator.
            
            CREATE will overwrite any configuration content on the traffic 
            generator with the payload content.

            UPDATE will update the current configuration content on the traffic 
            generator with the payload content.
            The content MUST be the entire configuration.
            The traffic generator receiving the configuration must resolve any
            changes in the submitted configuration.
            
            Deleting items from the configuration is an UPDATE with any items
            are to be deleted missing from the payload content.
          type: string
          enum: [CREATE, UPDATE]
        ports:
          description: >-
            The ports that will be configured on the traffic generator.
          type: array
          items:
            $ref: '../port/port.yaml#/components/schemas/Port.Port'
        devices:
          description: >-
            The devices that will be configured on the traffic generator.
          type: array
          items:
            $ref: '../device/device-group.yaml#/components/schemas/Emulated.DeviceGroup'
        flows:
          description: >-
            The flows that will be configured on the traffic generator.
          type: array
          items:
            $ref: '../flow/flow.yaml#/components/schemas/Flow.Flow'
        captures:
          description: >-
            The captures that will be configured on the traffic generator.
          type: array
          items:
            $ref: '../capture/capture.yaml#/components/schemas/Capture.Capture'

    State.Flow:
      description: >-
        Request for the traffic generator to move flows to a specific state.
      type: object
      required: [state]
      properties:
        state:
          description: >-
            The requested state of the flows.
          type: string
          enum: [START, STOP, PAUSE]
        flows:
          description: >-
            The unique names of flow objects.
          type: array
          items:
            type: string

    State.Port:
      description: >-
        Request for the traffic generator to move ports to a specific state.
      type: object
      required: [state]
      properties:
        state:
          description: >-
            The requested state of the port.
          type: string
          enum: [LINK_UP, LINK_DOWN]
        ports:
          description: >-
            The unique names of port objects.
          type: array
          items:
            type: string

    State.Device:
      description: >-
        Request for the traffic generator to move emulated devices to a specific state.
      type: object
      required: [state]
      properties:
        state:
          description: >-
            The requested state of the devices.
          type: string
          enum: [START, STOP]
        devices:
          description: >-
            The unique names of emulated device objects.
          type: array
          items:
            type: string

    State.Capture:
      description: >-
        Request for the traffic generator to move capture to a specific state.
      type: object
      required: [state]
      properties:
        state:
          type: string
          enum: [START, STOP]
        captures:
          description: >-
            The unique names of capture objects.
          type: array
          items:
            type: string

    State.Desired:
      description: >-
        The desired state of the traffic generator 
      type: object
      required: [choice]
      properties:
        choice: 
          type: string
          enum: [config, port, device, flow, capture]
        config:
          $ref: '#/components/schemas/State.Config'
        port:
          $ref: '#/components/schemas/State.Port'
        device:
          $ref: '#/components/schemas/State.Device'
        flow:
          $ref: '#/components/schemas/State.Flow'
        capture:
          $ref: '#/components/schemas/State.Capture'

    State.Current:
      description: >-
        The desired and actual state of the traffic generator
      type: object
      properties:
        states:
          type: string
          enum: [CONFIG, FLOW, CAPTURE]
        flow:
          description: >-
            A list of configured flow names
            If the list is empty the type will apply to all configured flows
          type: array
          items:
            type: string
        capture:
            type: integer
            description: >-
              The number of seconds to wait for all the flows to be in the specified state
